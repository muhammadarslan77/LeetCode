class Solution:
    def getWordsInLongestSubsequence(self, words: List[str], groups: List[int]) -> List[str]:
        if not words:
            return []

        res = []
        dp = [1] * len(words)
        previous = [-1] * len(words)
        max = 1
        end = 0

        for i in range(1, len(words)):
            for j in range(i):
                if (groups[i] != groups[j]) and (len(words[i]) == len(words[j])) and (sum(x != y for x, y in zip(words[i], words[j])) == 1):
                    if dp[j] + 1 > dp[i]:
                        dp[i] = dp[j] + 1
                        previous[i] = j
            if dp[i] > max:
                max = dp[i]
                end = i
            
        while end != -1:
            res.append(words[end])
            end = previous[end]
        
        return res[::-1]
